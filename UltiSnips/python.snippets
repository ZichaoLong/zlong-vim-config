priority -10

snippet tf.in "InteractiveSession" b
tf.InteractiveSession()${0}
endsnippet

snippet tf.gl "global_variables_initializer" b
tf.global_variables_initializer().run()${0}
endsnippet

snippet tf.tr "tf.train" b
tf.train
endsnippet
snippet tf.train. "AdamOptimizer()" b
tf.train.AdamOptimizer(${1:0.1})${0}
endsnippet
snippet tf.train. "AdagradOptimizer()" b
tf.train.AdagradOptimizer(${1:0.1})${0}
endsnippet
snippet tf.train. "GradientDescentOptimizer()" b
tf.train.GradientDescentOptimizer(${1:0.1})${0}
endsnippet
snippet tf.train. "AdadeltaOptimizer()" b
tf.train.AdadeltaOptimizer(${1:0.1})${0}
endsnippet

snippet importplt "import matplotlib.pyplot as plt"
import matplotlib.pyplot as plt
${0}
endsnippet
snippet .add "plot()" b
.add_subplot(${1:111}).plot(${2})[0].axes${0}
endsnippet
snippet .add "imshow()" b
.add_subplot(${1:111}).imshow(${2}, cmap='${3}')[0].axes${0}
endsnippet
snippet .add "scatter()" b
.add_subplot(${1:111, projection='3d'}).scatter(${2}, cmap='${3}')[0].axes${0}
endsnippet
snippet .axes. "set_title()" b
.axes.set_title(${1})${0}
endsnippet
snippet .axes. "get_figure()" b
.axes.get_figure(${1})${0}
endsnippet
snippet .axes. "semilogy()" b
.axes.semilogy()${0}
endsnippet
snippet get_figure(). "savefig()" b
savefig(${1:'image name'}${2:, bbox_inches='tight'}${3:, dpi=400})
endsnippet
snippet plt "pltnewaxis()" b
pltnewaxis()${0}
endsnippet
snippet plt3d "pltnewaxis3d()" b
pltnewaxis3d()${0}
endsnippet
snippet pltbar "pltnewmeshbar()" b
pltnewmeshbar(${1:x, y, z, N=50})${0}
endsnippet
snippet timeit "time it" b
${1:import time}${2}startt = time.time()
${3:code for time test}
print('elapsed time ', time.time()-startt)
endsnippet


snippet improc "improc_tools" b
improc_tools
endsnippet
snippet improc_tools. "kernel_basis_filter" b
improc_tools.kernel_basis_filter${0}
endsnippet
snippet improc_tools. "box_filter" b
improc_tools.box_filter${0}
endsnippet
snippet improc_tools. "imguidedfilter" b
improc_tools.imguidedfilter${0}
endsnippet
snippet improc_tools "improc_tools" b
improc_tools.${1:k}${1/(k)$(b)$(i)/(?1:ernel_basis_filter)(?2:ox_filter)(?3:mguidedfilter)/}${0}
endsnippet


